version: "3"

services:
  zookeeper:
    image: docker.io/bitnami/zookeeper
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: docker.io/bitnami/kafka
    ports:
      - "9092:9092"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9093,EXTERNAL://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9093,EXTERNAL://kafka:9092
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper

  kafka-ui:
    image: provectuslabs/kafka-ui
    hostname: kafka-ui
    container_name: kafka_ui
    depends_on:
      - zookeeper
    ports:
      - "8080:8080"
    environment:
      DYNAMIC_CONFIG_ENABLED: "true"
      KAFKA_CLUSTERS_0_NAME: kafkacluster
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "kafka:9093,localhost:9093,localhost:9092,kafka:9092"

  spark-consumer:
    image: bitnami/spark:latest
    environment:
      - VIRTUAL_ENV=/opt/bitnami/python
      - PROJECT_DIR=/opt/bitnami/python/src/spark
    volumes:
      - ./src/spark:/opt/bitnami/python/src/spark
    depends_on:
      - kafka
      - zookeeper

  spark-master:
    image: bitnami/spark:latest
    environment:
      - SPARK_MODE=master
    volumes:
      - ./src/spark:/opt/bitnami/python/src/spark
    ports:
      - "7077:7077"
      - "8081:8080"
    hostname: spark-master

  spark-worker:
    image: bitnami/spark:latest
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    depends_on:
      - spark-master
    ports:
      - "8082:8081"

  crypto-producer:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - kafka
      - zookeeper
    ports:
      - "8000:8000"

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - crypto-producer
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
  grafana_data:
    driver: local